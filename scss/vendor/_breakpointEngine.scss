/*------------------------------------------------------------*\
            GENERATE CSS-TO-JS PSEUDO-CLASS HINTS
\*------------------------------------------------------------*/
@if ($use-css-to-js) {
    body:before {
        @if ($css-to-js-version == 3) {
            content: "0";
        } @else {
            content: "mobile";
        }
        display: none; /* Prevent from displaying. */
    }

    @each $key, $value in $breakpoints {
        @if ($use-ems) {
            $value: $value/16px*1em;
        }
        @include susy-breakpoint($value) {
            body:before {
                @if ($css-to-js-version == 3) {
                    content: "#{$value}"
                } @else {
                    content: "#{$key}"
                }
            }
        }
    }
}

/*------------------------------------------------------------*\
                       MIN-WIDTH BREAKPOINT
\*------------------------------------------------------------*/
@mixin breakpoint-min($bp, $media: screen) {
    @if ($use-ems) {
        $bp: map-get($breakpoints, $bp) / 16px * 1em;
        $t:( media: $media, min-width: $bp);

        @include susy-media($t) {
            @content;
        }
    } @else {
        $t:( media: $media, min-width: map-get($breakpoints, $bp));
        @include susy-media(map-get($t)) {
            @content;
        }
    }
}

/*------------------------------------------------------------*\
                 MIN-WIDTH AND MAX-WIDTH BREAKPOINT
\*------------------------------------------------------------*/
@mixin breakpoint-min-max($bp-min, $bp-max, $media: screen) {
    @if ($use-ems) {

        $bp-min: map-get($breakpoints, $bp-min) / 16px * 1em;
        $bp-max: (map-get($breakpoints, $bp-max)-1) / 16px *1em;
        $t:(media: $media, min-width: $bp-min, max-width: $bp-max);

        @include susy-media($t) {
            @content;
        }

    } @else {
        $t:(media: $media, min-width: map-get($breakpoints, $bp-min), max-width: map-get($breakpoints, $bp-max)-1);

        @include susy-media($t) {
            @content;
        }
    }
}

/*------------------------------------------------------------*\
           MIN-WIDTH BREAKPOINT WITH SUSY GRID
\*------------------------------------------------------------*/

@mixin breakpoint-grid($bp, $grid) {
    @if ($use-ems) {
        $bp: map-get($breakpoints, $bp) / 16px * 1em;
        @include susy-breakpoint($bp, $grid) {
            @content;
        }
    } @else {
        @include susy-breakpoint(map-get($breakpoints, $bp), $grid) {
            @content;
        }
    }
}