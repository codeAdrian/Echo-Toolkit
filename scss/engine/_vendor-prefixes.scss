@mixin retina($ratio) {
    @media (min--moz-device-pixel-ratio: $ratio),
    (-webkit-min-device-pixel-ratio: $ratio),
    (min-device-pixel-ratio: $ratio) {
        @content;
    }
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@mixin reflect($content...){
    -webkit-box-reflect: $content;
}

@mixin filters($content...) {
    -webkit-filter: $content;
    filter: $content;
}

@mixin font-face($style-name, $file, $family) {
    $filepath: "fonts/" + $family + "/" + $file;
    @font-face {
        font-family: "#{$style-name}";
        src: url($filepath + ".eot");
        src: url($filepath + ".eot?#iefix") format('embedded-opentype'),
        url($filepath + ".woff") format('woff'),
        url($filepath + ".ttf")  format('truetype'),
        url($filepath + ".svg#" + $style-name + "") format('svg');
    }
}